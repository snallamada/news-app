{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { NewsState } from '../context/NewsContext';\nconst useFetch = url => {\n  _s();\n  const {\n    articles,\n    setArticles\n  } = NewsState();\n  useEffect(() => {\n    // Function to fetch news data\n    const fetchNews = async () => {\n      // Make an HTTP GET request to the specified URL\n      axios.get(url).then(response => {\n        // Update the articles state with the fetched data\n        setArticles(response.data.articles);\n      }).catch(error => {\n        // Log any errors to the console\n        console.log('Error occurred while fetching news:', error);\n      });\n    };\n    // Call the news function to fetch data when the component mounts or when the URL changes\n    fetchNews();\n    // Dependency array [url] ensures the effect runs when the URL changes\n  }, [url, setArticles]);\n  // Return the articles state for the consuming component\n  return {\n    articles\n  };\n};\n_s(useFetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFetch;","map":{"version":3,"names":["axios","useEffect","NewsState","useFetch","url","_s","articles","setArticles","fetchNews","get","then","response","data","catch","error","console","log"],"sources":["C:/Users/nallamadas/OneDrive - 14 West/Desktop/Git-projects/news-app/src/hooks/useFetch.js"],"sourcesContent":["import axios from 'axios';\r\nimport  { useEffect } from 'react'\r\nimport { NewsState } from '../context/NewsContext';\r\n\r\nconst useFetch = (url) => {\r\n    const {articles,setArticles} = NewsState();\r\n    useEffect(() => {\r\n      // Function to fetch news data\r\n      const fetchNews = async () => {\r\n        // Make an HTTP GET request to the specified URL\r\n        axios\r\n          .get(url)\r\n          .then((response) => {\r\n            // Update the articles state with the fetched data\r\n            setArticles(response.data.articles);\r\n          })\r\n          .catch((error) => {\r\n            // Log any errors to the console\r\n            console.log('Error occurred while fetching news:',error);\r\n          });\r\n      };\r\n      // Call the news function to fetch data when the component mounts or when the URL changes\r\n      fetchNews();\r\n     // Dependency array [url] ensures the effect runs when the URL changes\r\n    }, [url, setArticles]);\r\n     // Return the articles state for the consuming component\r\n    return {articles};\r\n}\r\n\r\nexport default useFetch"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAUC,SAAS,QAAQ,OAAO;AAClC,SAASC,SAAS,QAAQ,wBAAwB;AAElD,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM;IAACC,QAAQ;IAACC;EAAW,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACAR,KAAK,CACFS,GAAG,CAACL,GAAG,CAAC,CACRM,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAACN,QAAQ,CAAC;MACrC,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAACF,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IACD;IACAN,SAAS,CAAC,CAAC;IACZ;EACD,CAAC,EAAE,CAACJ,GAAG,EAAEG,WAAW,CAAC,CAAC;EACrB;EACD,OAAO;IAACD;EAAQ,CAAC;AACrB,CAAC;AAAAD,EAAA,CAvBKF,QAAQ;AAyBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}